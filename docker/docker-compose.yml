version: "2.3"


# ==============================================================================
#                                 Components
# ==============================================================================

x-user: &user
    user: ${USERNAME?USERNAME env var not set! Use the Makefile}

x-volumes-roscube: &volumes-roscube
    volumes:
        - $HOME/.Xauthority:/home/${USERNAME}/.Xauthority
        - ../src:/home/${USERNAME}/driverless_ws/src
        - ../datasets:/home/${USERNAME}/datasets
        # /dev/shm is mounted in so that two foxy containers can talk to each other when using net=host, see: https://answers.ros.org/question/370595/ros2-foxy-nodes-cant-communicate-through-docker-container-border/
        - /dev/shm:/dev/shm

x-volumes-jetson: &volumes-jetson
    volumes:
        # see x-volumes-roscube above for explanation of this
        - /dev/shm:/dev/shm
        # mount in X11 stuff for display
        - /tmp/.X11-unix:/tmp/.X11-unix
        - ../src:/home/${USERNAME}/driverless_ws/src
        - ../datasets:/home/${USERNAME}/datasets

x-devices: &devices
    devices:
       - /dev/dri:/dev/dri

x-env-file: &env-file
    env_file:
        - .env

x-network: &network
    network_mode: "host"
    privileged: true
    pid: "host"

x-interactive: &interactive
    stdin_open: true
    tty: true

x-visible: &visible
    tty: true

x-jetson-extras: &jetson-extras
    runtime: nvidia


# ==============================================================================
#                       Services (Targets in the Makefile)
# ==============================================================================

services:
    zed_camera_driver:
        build:
            context: ../
            dockerfile: ./src/hardware/zed_driver/docker/Dockerfile
            args:
                USERNAME: ${USERNAME?USERNAME env var not set! Use the Makefile}
                HOST_UID: ${HOST_UID?HOST_UID env var not set! Use the Makefile}
        volumes:
            # see x-volumes-roscube above for explanation of this
            - /dev/shm:/dev/shm
            # mount in X11 stuff for display
            - /tmp/.X11-unix:/tmp/.X11-unix
            # mount in the relevant source
            - ../src/hardware/zed_driver:/driverless_ws/src/zed_driver
        <<: *env-file
        <<: *devices
        <<: *network
        <<: *interactive
        <<: *jetson-extras

    jetson:
        build:
            context: ../
            dockerfile: ./src/machines/jetson_machine/Dockerfile
            args:
                USERNAME: ${USERNAME?USERNAME env var not set! Use the Makefile}
                HOST_UID: ${HOST_UID?HOST_UID env var not set! Use the Makefile}
        <<: *env-file
        <<: *volumes-jetson
        <<: *user
        <<: *devices
        <<: *network
        <<: *interactive
        <<: *jetson-extras
        command: ros2 launch jetson_machine machine.launch.py

    roscube:
        build:
            context: ../
            dockerfile: ./src/machines/roscube_machine/Dockerfile
            args:
                USERNAME: ${USERNAME?USERNAME env var not set! Use the Makefile}
                HOST_UID: ${HOST_UID?HOST_UID env var not set! Use the Makefile}
        <<: *env-file
        <<: *volumes-roscube
        <<: *user
        <<: *devices
        <<: *network
        <<: *interactive
        command: ros2 launch roscube_machine machine.launch.py

    jetson_terminal:
        build:
            context: ../
            dockerfile: ./src/machines/jetson_machine/Dockerfile
            args:
                USERNAME: ${USERNAME?USERNAME env var not set! Use the Makefile}
                HOST_UID: ${HOST_UID?HOST_UID env var not set! Use the Makefile}
        <<: *env-file
        <<: *volumes-jetson
        <<: *user
        <<: *devices
        <<: *network
        <<: *interactive
        <<: *jetson-extras
        command: bash

    roscube_terminal:
        build:
            context: ../
            dockerfile: ./src/machines/roscube_machine/Dockerfile
            args:
                USERNAME: ${USERNAME?USERNAME env var not set! Use the Makefile}
                HOST_UID: ${HOST_UID?HOST_UID env var not set! Use the Makefile}
        <<: *env-file
        <<: *volumes-roscube
        <<: *user
        <<: *devices
        <<: *network
        <<: *interactive
        command: bash
