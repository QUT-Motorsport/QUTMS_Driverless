FROM qutms_driverless_base:l4t-jetpack-r35.3.1
# qutms_driverless_base generated by qutms_driverless/docker/Makefile

ARG USERNAME
ARG HOST_UID
# dialout group is used for compatability with mac
ARG HOST_GROUP=dialout

USER root
WORKDIR /tmp

# ==============================================================================
#                           Install ZED Drivers
# https://github.com/stereolabs/zed-ros2-wrapper/blob/master/docker/Dockerfile.l4t35_1-humble-devel
# ==============================================================================

# environment variable is needed to use the streaming features on Jetson inside a container
ENV LOGNAME root

# Disable apt-get warnings
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 42D5A192B819C5DA && \
  apt-get update || true && apt-get install -y --no-install-recommends \ 
  apt-utils dialog lsb-release wget less udev sudo build-essential cmake \
  git jq libpq-dev zstd usbutils curl gnupg2 libusb-1.0-0-dev && \
  rm -rf /var/lib/apt/lists/*

ENV TZ=Australia/Brisbane
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# tegra 35.3.1, Jetpack 5.1.1 
RUN echo "# R35 (release), REVISION: 3.1" > /etc/nv_tegra_release

# copy calibration file
COPY ./src/machines/jetson_machine/SN33580719.conf /usr/local/zed/settings/SN33580719.conf

WORKDIR /home/${USERNAME}/driverless_ws

# requirements
COPY ./src/machines/jetson_machine/jetson_requirements.pip ./requirements.pip
# tensorRT python api wheel
COPY ./src/machines/jetson_machine/tensorrt-8.2.1.8-cp310-none-linux_aarch64.whl ./tensorrt-8.2.1.8-cp310-none-linux_aarch64.whl
RUN source /home/${USERNAME}/mambaforge/bin/activate; \
    conda activate driverless_env && \
    pip install -r ./requirements.pip

COPY ./src/machines/jetson_machine/jetson_requirements.conda ./requirements.conda
RUN source /home/${USERNAME}/mambaforge/bin/activate; \
    conda activate driverless_env &&\
    mamba install -y --file ./requirements.conda

# cleanup
RUN rm -f ./requirements.conda ./requirements.pip ./tensorrt-8.2.1.8-cp310-none-linux_aarch64.whl

# ZED SDK
WORKDIR /tmp

RUN wget -q --no-check-certificate -O ZED_SDK_Linux_JP.run https://download.stereolabs.com/zedsdk/4.0/l4t35.3/jetsons && \
    chmod +x ZED_SDK_Linux_JP.run

RUN source /home/${USERNAME}/mambaforge/bin/activate; \
    conda activate driverless_env && \
    ./ZED_SDK_Linux_JP.run silent skip_tools && \
    rm -rf /usr/local/zed/resources/* && \
    rm -rf ZED_SDK_Linux_JP.run && \
    rm -rf /var/lib/apt/lists/*

# symbolic link is needed to use the streaming features on Jetson inside a container
RUN ln -sf /usr/lib/aarch64-linux-gnu/tegra/libv4l2.so.0 /usr/lib/aarch64-linux-gnu/libv4l2.so

# packages
WORKDIR /home/${USERNAME}/driverless_ws

COPY --chown=${USERNAME}:${HOST_GROUP} ./src/ ./src

RUN git clone --recurse-submodules https://github.com/stereolabs/zed-ros2-wrapper.git

# run a build
ENV PYTHON_EXECUTABLE /home/${USERNAME}/mambaforge/envs/driverless_env/bin/python

RUN source /home/${USERNAME}/mambaforge/bin/activate; \
    conda activate driverless_env && \
    colcon build --symlink-install --packages-up-to jetson_machine --cmake-args -DPYTHON_EXECUTABLE=${PYTHON_EXECUTABLE} -DPython3_EXECUTABLE=${PYTHON_EXECUTABLE} -DCMAKE_BUILD_TYPE=Release -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs -DCUDA_CUDART_LIBRARY=/usr/local/cuda/lib64/stubs -DCMAKE_CXX_FLAGS=-Wl,--allow-shlib-undefined

# delete source
RUN rm -rf ./src

USER ${USERNAME}

# # tell ROS to use Cyclone DDS
# ENV RMW_IMPLEMENTATION="rmw_cyclonedds_cpp"
# ENV CYCLONEDDS_URI=file:///home/developer/driverless_ws/src/machines/jetson_machine/cyclonedds.xml
