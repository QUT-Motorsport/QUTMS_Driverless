FROM qutms_driverless_base:r35.3.1-zed
# generated by jetson-containers

ARG ZED_ROS2_VERSION=foxy-humble-v4.0.5

# Docker config setup
ENV DEBIAN_FRONTEND=noninteractive
ENV SHELL /bin/bash
SHELL ["/bin/bash", "-c"]

WORKDIR /tmp

# ==============================================================================
#                           Set up a user using host UID
#    (this helps with file permissions when mounting folders into a container)
# ==============================================================================

ARG USERNAME
ARG HOST_UID
ARG HOST_GROUP=dialout

# create user and set no password required
RUN useradd \
        -r \
        -m \
        -d /home/${USERNAME}/ \
        -u ${HOST_UID} \
        -g ${HOST_GROUP} \
        -G sudo,video,audio \
        ${USERNAME} && \
    echo ${USERNAME}:${USERNAME} | chpasswd && \
    echo "${USERNAME} ALL=NOPASSWD: ALL" >> /etc/sudoers

WORKDIR /home/${USERNAME}/driverless_ws

# zed-ros2 master @6e5865a4c8adce96882871b357bddd85cb2700f3
RUN git clone https://github.com/stereolabs/zed-ros2-wrapper.git \
    --branch ${ZED_ROS2_VERSION} --recurse-submodules && \
    git clone https://github.com/QUT-Motorsport/QUTMS_Driverless.git \
    --recurse-submodules

# install ROS2 deps for jetson in the ROS root
WORKDIR ${ROS_ROOT}

# uses rosinstall generator to get dependencies from the driverless workspace src
# these are downloaded from ROS 2 git repos and placed into a 'requirements' folder
# in the ROS root to be installed and built from source
RUN source install/setup.bash && \
    export ROS_PACKAGE_PATH=${AMENT_PREFIX_PATH} && \
    mkdir -p src/requirements && \
    rosinstall_generator --deps --exclude RPP sbg_driver --rosdistro ${ROS_DISTRO} \
    `rosdep keys --ignore-src --rosdistro=${ROS_DISTRO} \
    --from-paths /home/${USERNAME}/driverless_ws/QUTMS_Driverless /home/${USERNAME}/driverless_ws/zed-ros2-wrapper` \
    > ros.${ROS_DISTRO}.requirements.rosinstall \
    && cat ros.${ROS_DISTRO}.requirements.rosinstall \
    && vcs import src/requirements < ros.${ROS_DISTRO}.requirements.rosinstall 

# apt and pip dependencies from the requirements are installed
RUN source install/setup.bash && \
    apt-get update || true rosdep update && \
    rosdep install -y --rosdistro=${ROS_DISTRO} --ignore-src \
    --from-paths src/requirements && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean 

# requirements are built from source into the ROS root becomes part of the ROS root
RUN source install/setup.bash && \
    export ROS_PACKAGE_PATH=${AMENT_PREFIX_PATH} && \
    colcon build --merge-install --base-paths src/requirements \
    && rm -rf ${ROS_ROOT}/src \
    && rm -rf ${ROS_ROOT}/logs \
    && rm -rf ${ROS_ROOT}/build 

WORKDIR /home/${USERNAME}/driverless_ws

# remove driverless repo as deps have now been installed
RUN rm -rf QUTMS_Driverless

# copy zed cam calibration file
COPY ./src/machines/jetson_machine/SN33580719.conf /usr/local/zed/settings/SN33580719.conf

# install pip requirements
COPY ./src/machines/jetson_machine/requirements.txt /tmp/requirements.txt
RUN pip3 install -r /tmp/requirements.txt && rm ./requirements.txt

COPY --chown=${USERNAME}:${HOST_GROUP} ./src/ ./src

# build packages in the driverless workspace
RUN source ${ROS_ROOT}/install/setup.bash; \
    colcon build --symlink-install --packages-up-to jetson_machine --cmake-args \
    ' -DCMAKE_BUILD_TYPE=Release' ' -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64' \
    ' -DCUDA_CUDART_LIBRARY=/usr/local/cuda/lib64' ' -DCMAKE_CXX_FLAGS=-Wl,--allow-shlib-undefined' \
    ' --no-warn-unused-cli'

# delete source
RUN rm -rf ./src

RUN echo "source /opt/ros/$ROS_DISTRO/install/setup.bash" >> /home/${USERNAME}/.bashrc
RUN echo "test -f /home/${USERNAME}/driverless_ws/install/setup.bash && source /home/${USERNAME}/driverless_ws/install/setup.bash" >> /home/${USERNAME}/.bashrc
COPY ./docker/ros_entrypoint.sh /ros_entrypoint.sh
ENTRYPOINT ["/ros_entrypoint.sh"]

RUN chmod -R go=rwx /home/${USERNAME}
RUN chmod -R go=rwx /usr/local/zed
RUN chmod -R go=rwx /usr/local/lib/python3.8/

# tell ROS to use Cyclone DDS
ENV RMW_IMPLEMENTATION="rmw_cyclonedds_cpp"
ENV CYCLONEDDS_URI=file:///home/developer/driverless_ws/src/machines/jetson_machine/cyclonedds.xml
