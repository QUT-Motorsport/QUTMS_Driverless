FROM qutms_driverless_base:l4t-tensorrt-r8.2.1
# qutms_driverless_base generated by qutms_driverless/docker/Makefile

ARG USERNAME
ARG HOST_UID
# dialout group is used for compatability with mac
ARG HOST_GROUP=dialout

WORKDIR /tmp

# ==============================================================================
#                           Install ZED Drivers
# https://github.com/stereolabs/zed-docker/blob/master/3.X/jetpack_4.X/tools-devel/Dockerfile
# ==============================================================================

# environment variable is needed to use the streaming features on Jetson inside a container
ENV LOGNAME root
# redundant:
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update -y && apt-get install --no-install-recommends lsb-release wget less udev sudo apt-transport-https zstd -y
RUN echo "# R32 (release), REVISION: 7" > /etc/nv_tegra_release

# link copied from ZED SDK legacy archive downloads
RUN wget -q --no-check-certificate -O ZED_SDK_Linux_JP.run https://download.stereolabs.com/zedsdk/3.8/l4t32.7/jetsons
RUN chmod +x ZED_SDK_Linux_JP.run ; ./ZED_SDK_Linux_JP.run silent

RUN rm -rf /usr/local/zed/resources/* && \
    rm -rf ZED_SDK_Linux_JP.run && \
    rm -rf /var/lib/apt/lists/*

# symbolic link is needed to use the streaming features on Jetson inside a container
RUN ln -sf /usr/lib/aarch64-linux-gnu/tegra/libv4l2.so.0 /usr/lib/aarch64-linux-gnu/libv4l2.so

# allows the ZED SDK to be sourced by cmake in colcon
RUN chown ${USERNAME}: /usr/local/zed/

WORKDIR /usr/local/zed
ENV CUDA_HOME=/usr/local/cuda

# ==============================================================================
#                      Install ZED ROS nodes
#     Following instructions from https://www.stereolabs.com/docs/ros2/
# ==============================================================================

WORKDIR /home/$USERNAME/driverless_ws
USER ${USERNAME}

# symlink libusb for the build (APPARENTLY THIS FILE ALREADY EXISTS?)
# RUN ln -s /lib/aarch64-linux-gnu/libusb-1.0.so.0 /usr/lib/aarch64-linux-gnu/libusb-1.0.so

# copy calibration file
COPY ./src/machines/jetson_machine/SN33580719.conf /usr/local/zed/settings/SN33580719.conf

# requirements
COPY ./src/machines/jetson_machine/jetson_requirements.txt ./requirements
RUN source /home/${USERNAME}/mambaforge/bin/activate; \
    conda activate driverless_env &&\
    pip install -r ./requirements

# tensorRT python api wheel
COPY ./src/machines/jetson_machine/tensorrt-8.2.1.8-cp310-none-linux_aarch64.whl ./tensorrt-8.2.1.8-cp310-none-linux_aarch64.whl
RUN source /home/${USERNAME}/mambaforge/bin/activate; \
    conda activate driverless_env &&\
    pip install tensorrt-8.2.1.8-cp310-none-linux_aarch64.whl

# cleanup
RUN rm -f ./requirements ./tensorrt-8.2.1.8-cp310-none-linux_aarch64.whl

USER root

# allows the ZED SDK to be sourced by cmake in colcon
RUN chown ${USERNAME}:users /usr/local/zed/

USER ${USERNAME}

# run a build
COPY --chown=${USERNAME}:${HOST_GROUP} ./src/ ./src
RUN source /home/${USERNAME}/mambaforge/bin/activate; \
    conda activate driverless_env && \
    colcon build --symlink-install --packages-up-to jetson_machine --cmake-args -DCMAKE_BUILD_TYPE=Release -DCMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs -DCUDA_CUDART_LIBRARY=/usr/local/cuda/lib64/stubs -DCMAKE_CXX_FLAGS=-Wl,--allow-shlib-undefined

# delete source
# RUN rm -rf ./src

# tell ROS to use Cyclone DDS
# ENV RMW_IMPLEMENTATION="rmw_cyclonedds_cpp"
# ENV CYCLONEDDS_URI=file:///home/developer/driverless_ws/src/machines/jetson_machine/cyclonedds.xml
