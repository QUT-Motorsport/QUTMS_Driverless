# based on https://robostack.github.io/GettingStarted.html
- install mambaforge (https://github.com/conda-forge/miniforge#install)
- mamba env create --name driverless_env --file dev_environment.yml
- conda activate driverless_env
- conda config --env --add channels conda-forge
- conda config --env --add channels robostack-experimental
- conda config --env --set channel_priority strict
- IF USING ZSH:
   - go to {mambaforge install path (usually /home/$USERNAME/mambaforge)}/envs/driverless_env/etc/conda/activate.d/ and create file ros-zsh-autocomplete.sh
   with contents:
```
eval "$(register-python-argcomplete ros2)"
eval "$(register-python-argcomplete colcon)"
```
- conda deactivate
- conda activate driverless_env
- ROS2 galactic is now installed and active

ARCHITECTURE NOTES
- each package will have a conda_requirements file, this file will be used instead of rosdep to manage dependencies
- specifying package dependencies in the package.xml will still be used to document build dependencies
- There are two reasons for doing this:
   1. with the addition of robostack, all python packages on rosdep are available though conda. However, if we use
      the "conda version" of rosdep, we are limited to using packages that have a rosdep -> conda package mapping
   2. so, since we are moving to conda anyway, we might as well commit fully to using conda for requirements management
      as we then get access to all packages on conda, rather than the limited subset rosdep provides
- the way this will work, is building up an environment will start with creating a base environment from dev_env.yml,
and then issuing a number of mamba install --file <package conda_requirements file> instructions to install package deps
into an env.
